<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>65</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>64</string>
					<key>Timestamp</key>
					<string>718561793.688359</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/FoodList/View/FoodDetailSheet.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func readGeometry&lt;K:PreferenceKey,Value&gt;(_ keyPath: KeyPath&lt;GeometryProxy,Value&gt;,key: K.Type) -&gt; some View where K.Value == Value{
</string>
				<key>leading</key>
				<string>extension View{
    
</string>
				<key>trailing</key>
				<string>        overlay {
            GeometryReader { proxy in
                Color.clear
</string>
			</dict>
			<key>title</key>
			<string>KeyPath应用，膜拜</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>94</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>93</string>
					<key>Timestamp</key>
					<string>718561940.689796</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/FoodList/View/FoodForm.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                .scrollDismissesKeyboard(.interactively)
</string>
				<key>leading</key>
				<string>                .multilineTextAlignment(.trailing)
                .font(.title3)
</string>
				<key>trailing</key>
				<string>                .toolbar(content: keyboardToolBar)
            }
        }
</string>
			</dict>
			<key>title</key>
			<string>取消键盘焦点</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>16</string>
					<key>EndingLineNumber</key>
					<string>15</string>
					<key>StartingColumnNumber</key>
					<string>9</string>
					<key>StartingLineNumber</key>
					<string>15</string>
					<key>Timestamp</key>
					<string>718562068.3882281</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/FoodList/View/FoodForm.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>focuse</string>
				<key>leading</key>
				<string>
private extension TextField where Label == Text{
    func </string>
				<key>trailing</key>
				<string>d(_ field: FocusState&lt;MyField?&gt;.Binding,equals: MyField) -&gt; some View{
        submitLabel(equals == .carb ? .done:.next)
            .focused(field, equals: equals)
</string>
			</dict>
			<key>title</key>
			<string>自动更换键盘焦点</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingLineNumber</key>
					<string>40</string>
					<key>StartingLineNumber</key>
					<string>40</string>
					<key>Timestamp</key>
					<string>718566918.691873</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/FoodList/View/Sheet.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    }
}
</string>
				<key>trailing</key>
				<string></string>
			</dict>
			<key>title</key>
			<string>将enum当做View来使用</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>48</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>48</string>
					<key>Timestamp</key>
					<string>718567247.698386</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Constant/SFSymbol.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    }
}
</string>
				<key>trailing</key>
				<string></string>
			</dict>
			<key>title</key>
			<string>将enum扩展为View并转为Image使用</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>30</string>
					<key>EndingLineNumber</key>
					<string>7</string>
					<key>StartingColumnNumber</key>
					<string>24</string>
					<key>StartingLineNumber</key>
					<string>7</string>
					<key>Timestamp</key>
					<string>718562322.515468</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Utils/SuffixWrapper.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>Suffix</string>
				<key>leading</key>
				<string>//

@propertyWrapper struct </string>
				<key>trailing</key>
				<string>: Equatable{
    var wrappedValue: Double
    private let suffix: String
</string>
			</dict>
			<key>title</key>
			<string>自定义propertyWrapper</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>26</string>
					<key>EndingLineNumber</key>
					<string>42</string>
					<key>StartingColumnNumber</key>
					<string>24</string>
					<key>StartingLineNumber</key>
					<string>42</string>
					<key>Timestamp</key>
					<string>718562491.653254</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Extension/View+.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>to</string>
				<key>leading</key>
				<string>    }
    
    /// Shortcut: [push(</string>
				<key>trailing</key>
				<string>: .center)](x-source-tag://push)
    func maxWidth() -&gt; some View{
        push(to: .center)
</string>
			</dict>
			<key>title</key>
			<string>给文档加链接</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>25</string>
					<key>EndingLineNumber</key>
					<string>10</string>
					<key>StartingColumnNumber</key>
					<string>16</string>
					<key>StartingLineNumber</key>
					<string>10</string>
					<key>Timestamp</key>
					<string>718562584.240811</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Extension/AnyLayout+.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>useVStack</string>
				<key>leading</key>
				<string>
extension AnyLayout {
    static func </string>
				<key>trailing</key>
				<string>(if condition: Bool, spacing: CGFloat, @ViewBuilder content: @escaping () -&gt; some View) -&gt; some View {
        let layout = condition ? AnyLayout(VStackLayout(spacing: spacing)) : AnyLayout(HStackLayout(spacing: spacing))
        return layout(content)
</string>
			</dict>
			<key>title</key>
			<string>根据内容修改排版</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>32</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>31</string>
					<key>Timestamp</key>
					<string>718571908.231981</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/FoodList/FoodListScreen.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        .environment(\.editMode, $editMode)
</string>
				<key>leading</key>
				<string>        }
        .background(Color.groupBg)
</string>
				<key>trailing</key>
				<string>        .safeAreaInset(edge: .bottom, content: buildFloatButton)
        .sheet(item: $mysheet)
    }
</string>
			</dict>
			<key>title</key>
			<string>解决TabView子页面中@Environment(\.editMode)失灵的问题</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>10</string>
					<key>StartingColumnNumber</key>
					<string>9</string>
					<key>StartingLineNumber</key>
					<string>10</string>
					<key>Timestamp</key>
					<string>718572095.275269</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>FoodPicker/Screen/HomeScreen.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>Tab</string>
				<key>leading</key>
				<string>
extension HomeScreen {
    enum </string>
				<key>trailing</key>
				<string>: View, CaseIterable {
        case picker, list, settings

</string>
			</dict>
			<key>title</key>
			<string>enum的Tab</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
